# Carregar dados do csv na stage area
#======================================
#OBS: por questões de privilégios, usar este código como comando psql e não SQL
# \copy st_book FROM '/home/welden/DataEnginneringProject/Projeto/datas_of_books.csv' DELIMITER ',' CSV;

# Transformar os dados
#=======================

INSERT INTO ST_DIM_BOOKS (NK_BOOK_ID, DESC_UPC, NM_BOOK)
(
	SELECT 
		CAST(BOOK_ID AS INTEGER) AS NK_BOOK_ID, 
		UPC AS DESC_UPC, 
		BOOK_NAME AS NM_BOOK 
	FROM ST_BOOK	
);

INSERT INTO ST_FACT_BOOKS (NK_BOOK_ID, NR_PRICE, NR_TAX, FLAG_AVAILABILITY, NR_QUANTITY_STOCK, NR_NUMBER_REVIEWS, NR_RATING, DT_EXTRACTION)
(
	SELECT 
		CAST(A.BOOK_ID AS INTEGER) AS NK_BOOK_ID,
		A.PRICE AS NR_PRICE,
		A.TAX AS NR_TAX,
		A.AVAILABILITY AS FLAG_AVAILABILITY,
		A.QUANTITY_IN_STOCK AS NR_QUANTITY_STOCK,
		A.NUMBER_OF_REVIEWS AS NR_NUMBER_REVIEWS,
		CASE 
			WHEN A.RATING LIKE 'One' THEN 1
			WHEN A.RATING LIKE 'Two' THEN 2
			WHEN A.RATING LIKE 'Three' THEN 3
			WHEN A.RATING LIKE 'Four' THEN 4
			WHEN A.RATING LIKE 'Five' THEN 5
		END AS NR_RATING,
		TO_DATE(A.EXTRACTION_DATE, 'DD/MM/YYYY') AS DT_EXTRACTION
	FROM ST_BOOK A
);

# Carregar o DW
#================

INSERT INTO DIM_BOOKS (NK_BOOK_ID, DESC_UPC, NM_BOOK)
(
	SELECT *	
	FROM DBLINK(
		'host=127.0.0.1 user=welden password=12345 dbname=st_area_books_db',
		'SELECT NK_BOOK_ID, DESC_UPC, NM_BOOK FROM ST_DIM_BOOKS'
	) STAREA ( NK_BOOK_ID INT, DESC_UPC VARCHAR(100), NM_BOOK VARCHAR(255) )
);


INSERT INTO DIM_DATE (SK_DATE_ID, FULL_DATE, NR_DAY, NR_MONTH, NR_YEAR, NM_DAY_OF_WEEK)
(
	SELECT 
		TO_NUMBER(GS.DATAS, '99-99-9999') AS SK_DATA_ID,
		GS.DATAS::DATE AS FULL_DATE,
		EXTRACT(DAY FROM GS.DATAS::TIMESTAMP) AS NR_DAY,
		EXTRACT(MONTH FROM GS.DATAS::TIMESTAMP) AS NR_MONTH,
		EXTRACT(YEAR FROM GS.DATAS::TIMESTAMP) AS NR_YEAR,
		CASE 
			WHEN EXTRACT(DOW FROM GS.DATAS::TIMESTAMP)=1 THEN 'SEGUNDA-FEIRA'
			WHEN EXTRACT(DOW FROM GS.DATAS::TIMESTAMP)=2 THEN 'TERÇA-FEIRA'
			WHEN EXTRACT(DOW FROM GS.DATAS::TIMESTAMP)=3 THEN 'QUARTA-FEIRA'
			WHEN EXTRACT(DOW FROM GS.DATAS::TIMESTAMP)=4 THEN 'QUINTA-FEIRA'
			WHEN EXTRACT(DOW FROM GS.DATAS::TIMESTAMP)=5 THEN 'SEXTA-FEIRA'
			WHEN EXTRACT(DOW FROM GS.DATAS::TIMESTAMP)=6 THEN 'SÁBADO'
			WHEN EXTRACT(DOW FROM GS.DATAS::TIMESTAMP)=0 THEN 'DOMINGO'
		END AS NM_DAY_OF_WEEK
	FROM
		(SELECT 
			TO_CHAR(CAST(GENERATE_SERIES AS DATE), 'DD-MM-YYYY') AS DATAS
			FROM GENERATE_SERIES('2021-12-01'::TIMESTAMP, '2022-12-31', '1 DAY')
		) GS
);


INSERT INTO FACT_BOOKS (SK_BOOK_ID, SK_DATE_ID, NR_PRICE, NR_TAX, FLAG_AVAILABILITY, NR_QUANTITY_STOCK, NR_NUMBER_REVIEWS, NR_RATING, DT_EXTRACTION, DT_LOAD)
(
	SELECT 
		DIMB.SK_BOOK_ID AS SK_BOOK_ID,
		TO_NUMBER(TO_CHAR(STFACT.DT_EXTRACTION,'DD/MM/YYYY'),'99-99-9999') AS SK_DATA_ID,
		STFACT.NR_PRICE AS NR_PRICE,
		STFACT.NR_TAX AS NR_TAX,
		STFACT.FLAG_AVAILABILITY AS FLAG_AVAILABILITY,
		STFACT.NR_QUANTITY_STOCK AS NR_QUANTITY_STOCK,
		STFACT.NR_NUMBER_REVIEWS AS NR_NUMBER_REVIEWS,
		STFACT.NR_RATING AS NR_RATING,
		STFACT.DT_EXTRACTION AS DT_EXTRACTION,
		CURRENT_DATE AS DT_LOAD
		 
	FROM 
		DBLINK(
			'host=127.0.0.1 user=welden password=12345 dbname=st_area_books_db',
			'SELECT NK_BOOK_ID, NR_PRICE, NR_TAX, FLAG_AVAILABILITY, NR_QUANTITY_STOCK, NR_NUMBER_REVIEWS, NR_RATING, DT_EXTRACTION
			FROM ST_FACT_BOOKS'
		) STFACT ( 
			NK_BOOK_ID INT,
			NR_PRICE DECIMAL,
			NR_TAX DECIMAL,
			FLAG_AVAILABILITY BOOL,
			NR_QUANTITY_STOCK INT,
			NR_NUMBER_REVIEWS INT,
			NR_RATING INT,
			DT_EXTRACTION DATE
		) 
		LEFT JOIN DIM_BOOKS DIMB
		ON STFACT.NK_BOOK_ID = DIMB.NK_BOOK_ID
);



	 

